import { GetServerSidePropsContext, GetStaticPropsContext, GetStaticPropsResult, GetServerSidePropsResult, Redirect } from 'next';
import { FunctionComponent, ComponentClass } from 'react';
import { getClient } from './client';
export declare const CLIENT_CACHE_PROP = "__CLIENT_CACHE_PROP";
export interface GetNextServerSidePropsConfig<Props = Record<string, unknown>> {
    client: ReturnType<typeof getClient>;
    Page?: FunctionComponent | ComponentClass;
    props?: Props;
    notFound?: boolean;
    redirect?: Redirect;
}
export interface GetNextStaticPropsConfig<Props = Record<string, unknown>> {
    client: ReturnType<typeof getClient>;
    Page?: FunctionComponent | ComponentClass;
    props?: Props;
    revalidate?: number | boolean;
    notFound?: boolean;
    redirect?: Redirect;
}
export interface PageProps<Props> {
    props: Props & {
        [CLIENT_CACHE_PROP]: string | null;
    };
}
export interface Is404Config {
    client: ReturnType<typeof getClient>;
}
export declare function getProps<Context extends GetStaticPropsContext | GetServerSidePropsContext, Props>(context: Context, { client, Page, props, }: GetNextServerSidePropsConfig | GetNextStaticPropsConfig): Promise<PageProps<Props>>;
export declare function is404<Context extends GetStaticPropsContext | GetServerSidePropsContext>({ params }: Context, { client }: Is404Config): Promise<boolean>;
export declare function getNextServerSideProps<Props>(context: GetServerSidePropsContext, config: GetNextServerSidePropsConfig): Promise<GetServerSidePropsResult<Props>>;
export declare function getNextStaticProps<Props>(context: GetStaticPropsContext, config: GetNextStaticPropsConfig): Promise<GetStaticPropsResult<Props>>;

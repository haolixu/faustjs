"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getClient = void 0;
const core_1 = require("@faustjs/core");
const react_1 = require("@gqty/react");
const isObject_1 = __importDefault(require("lodash/isObject"));
const merge_1 = __importDefault(require("lodash/merge"));
function getClient(clientConfig, createReactClientOpts) {
    const coreClient = core_1.getClient(clientConfig);
    let reactClientOpts = {
        defaults: {
            suspense: false,
            staleWhileRevalidate: false,
        },
    };
    if (isObject_1.default(createReactClientOpts)) {
        reactClientOpts = merge_1.default(reactClientOpts, createReactClientOpts);
    }
    const reactClient = react_1.createReactClient(coreClient, reactClientOpts);
    const { useQuery } = reactClient;
    const useIsLoading = () => {
        return useQuery().$state.isLoading;
    };
    const c = Object.assign(Object.assign({ client: coreClient }, reactClient), { useIsLoading });
    return c;
}
exports.getClient = getClient;

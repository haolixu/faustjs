import { ReactElement, SuspenseProps } from 'react';
import { OnErrorHandler } from '../common';
import type { ReactClientOptionsWithDefaults } from '../utils';
import type { GQtyClient } from 'gqty';
export interface GraphQLHOCOptions {
    suspense?: boolean | {
        fallback: SuspenseProps['fallback'];
    };
    staleWhileRevalidate?: boolean;
    onError?: OnErrorHandler;
}
export interface GraphQLHOC {
    <P>(component: (props: P) => ReactElement | null, options?: GraphQLHOCOptions): (props: P) => ReactElement | null;
}
export declare function createGraphqlHOC({ scheduler, eventHandler, interceptorManager }: GQtyClient<any>, { defaults: { suspense: defaultSuspense, staleWhileRevalidate: defaultStaleWhileRevalidate, }, }: ReactClientOptionsWithDefaults): GraphQLHOC;

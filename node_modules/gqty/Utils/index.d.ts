export interface DeferredPromise<T> {
    promise: Promise<T>;
    resolve: (value: T) => void;
    reject: (reason: unknown) => void;
}
export declare function createDeferredPromise<T = void>(): DeferredPromise<T>;
export declare const isInteger: (v: any) => v is number;
export declare function isEmptyObject(obj: object): boolean;
export * from './debounce';
export * from './object';
export * from './cycle';
export { default as mergeWith } from 'lodash/mergeWith.js';
export * from './selectionsInclude';

'use strict';

const commander = require('commander');
const fs = require('fs');
const path = require('path');
const url = require('url');
require('gqty');
require('graphql');
require('@graphql-codegen/core');
require('@graphql-codegen/typescript');
require('@graphql-tools/utils');
const config = require('./config.js');
require('./prettier.js');
const inspectWriteGenerate = require('./inspectWriteGenerate.js');
require('cross-fetch');
require('@graphql-tools/wrap');
require('mkdirp');
const innerState = require('./innerState.js');

innerState.__innerState.isCLI = true;
commander.program.version(JSON.parse(fs.readFileSync(path.resolve(path.dirname(url.fileURLToPath((typeof document === 'undefined' ? new (require('u' + 'rl').URL)('file:' + __filename).href : (document.currentScript && document.currentScript.src || new URL('bin.js', document.baseURI).href)))), "../package.json"), {
  encoding: "utf-8"
})).version).description("CLI for gqty");
commander.program.command("generate [endpoint] [destination]").option("--react", "Create React client").description(`Inspect or read from a file a GraphQL Schema and generate the gqty client in the specified directory (./src/generated/graphql.ts by default).
EXAMPLE 1: "gqty generate ./schema.gql --react" 
EXAMPLE 2: "gqty generate http://localhost:3000/graphql src/gqty/index.ts"
EXAMPLE 3 (Configuration file): "gqty generate"`).action(async (endpoint, destination, opts) => {
  let react;
  if (opts.react != null) {
    react = config.defaultConfig.react = typeof opts.react === "boolean" ? opts.react : !!opts.react;
  }
  await inspectWriteGenerate.inspectWriteGenerate({
    endpoint,
    destination,
    cli: true,
    generateOptions: {
      react
    }
  }).catch((err) => {
    if (err instanceof Error)
      delete err.stack;
    console.error(err);
    process.exit(1);
  });
  process.exit(0);
});
commander.program.parse(process.argv);
